% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnt_generics.R, R/dbi_methods.R, R/fs_methods.R
\name{cnt_write}
\alias{cnt_write}
\alias{cnt_write.connector_dbi}
\alias{cnt_write.connector_fs}
\title{Write content to the connector}
\usage{
cnt_write(connector_object, x, name, ...)

\method{cnt_write}{connector_dbi}(connector_object, x, name, ...)

\method{cnt_write}{connector_fs}(connector_object, x, name, ...)
}
\arguments{
\item{connector_object}{\link{connector} The connector object to use.}

\item{x}{The object to write to the connection}

\item{name}{\link{character} Name of the content to read, write, or remove. Typically the table name.}

\item{...}{Additional arguments passed to the method for the individual connector.}
}
\value{
\link{invisible} connector_object.
}
\description{
Generic implementing of how to write content to the different connector objects:

\itemize{
\item \link{connector_dbi}: Uses \code{\link[DBI:dbWriteTable]{DBI::dbWriteTable()}} to write the table to the DBI connection.
}

\itemize{
\item \link{connector_fs}: Uses \code{\link[=write_file]{write_file()}} to Write a file based on the file extension.
The underlying function used, and thereby also the arguments available
through \code{...} depends on the file extension.
}
}
\examples{
# Write table to DBI database
cnt <- connector_dbi$new(RSQLite::SQLite())

cnt |>
  cnt_list_content()

cnt |>
  cnt_write(iris, "iris")

cnt |>
  cnt_list_content()

# Write different file types to a file storage
cnt <- connector_fs$new(tempdir())

cnt |>
  cnt_list_content(pattern = "iris")

# rds file
cnt |>
  cnt_write(iris, "iris.rds")

# CSV file
cnt |>
  cnt_write(iris, "iris.csv")

cnt |>
  cnt_list_content(pattern = "iris")

}
