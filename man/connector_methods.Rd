% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connector.R, R/dbi.R
\name{connector_methods}
\alias{connector_methods}
\alias{cnt_read}
\alias{cnt_write}
\alias{cnt_remove}
\alias{cnt_list_content}
\alias{cnt_disconnect}
\alias{cnt_tbl}
\title{Defaults methods for all connector object}
\usage{
cnt_read(connector_object, ...)

cnt_write(connector_object, ...)

cnt_remove(connector_object, ...)

cnt_list_content(connector_object, ...)

cnt_disconnect(connector_object, ...)

cnt_tbl(connector_object, ...)
}
\arguments{
\item{connector_object}{A connector object to be able to use functions from it}

\item{...}{Additional arguments passed to the method}
}
\value{
The result of the read method
}
\description{
Those methods are a S3 method that dispatches to the specific methods for the connector object.
}
\details{
For example, if you have a connector object \code{Connector_fs}, you can use \code{read(Connector_fs, "file.csv")} to read the file. It will be dispatch to the \code{read.Connector_fs} method.
Why ? The main aim is to allow the user to use the same function for different connector objects by using the builder function \code{connector_fs} and add an "extra_class".
By doing so, you can create a subclass of the \code{Connector_fs} object and dispatch to the specific methods for this subclass.
For example, if you have a subclass \code{subclass}, you can use \code{read(subclass, "file.csv")} to read the file. It will be dispatch to the \code{read.subclass} method. And you can still use the \code{Connector_fs} methods.
}
