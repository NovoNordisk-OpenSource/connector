% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbi.R
\name{Connector_dbi_object}
\alias{Connector_dbi_object}
\alias{Connector_dbi}
\title{R6 class for a dbi connection, see \link{connector_dbi} (used to interact with DBI compliant database backends)}
\description{
Connector object for DBI connections. This object is used to interact with DBI compliant database backends.
See the \href{https://dbi.r-dbi.org/}{DBI package} for how which backends are supported.
}
\details{
Upon garbage collection, the connection will try to disconnect from the database.
But it is good practice to call \code{disconnect} when you are done with the connection.
}
\examples{
# Create DBI connector

db <- connector::Connector_dbi$new(RSQLite::SQLite(), ":memory:")

db

# Write to the database

db$write(iris, "iris")

# Read from the database

db$read("iris") |>
  head(5)

# List available tables

db$list_content()

# Use the connector to run a query

db$get_conn() |>
  DBI::dbGetQuery("SELECT * FROM iris limit 5")

# Use dplyr verbs and collect data

db$tbl("iris") |>
  dplyr::filter(Sepal.Length > 7) |>
  dplyr::collect()

# Disconnect from the database

db$disconnect()

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Connector_dbi-new}{\code{Connector_dbi$new()}}
\item \href{#method-Connector_dbi-list_content}{\code{Connector_dbi$list_content()}}
\item \href{#method-Connector_dbi-get_conn}{\code{Connector_dbi$get_conn()}}
\item \href{#method-Connector_dbi-disconnect}{\code{Connector_dbi$disconnect()}}
\item \href{#method-Connector_dbi-read}{\code{Connector_dbi$read()}}
\item \href{#method-Connector_dbi-write}{\code{Connector_dbi$write()}}
\item \href{#method-Connector_dbi-remove}{\code{Connector_dbi$remove()}}
\item \href{#method-Connector_dbi-tbl}{\code{Connector_dbi$tbl()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-new"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-new}{}}}
\subsection{Method \code{new()}}{
Initialize the connection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$new(drv, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{drv}}{DBI driver}

\item{\code{...}}{Additional arguments passed to \link[DBI:dbConnect]{DBI::dbConnect}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \link{connector_dbi} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-list_content"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-list_content}{}}}
\subsection{Method \code{list_content()}}{
List tables in the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$list_content(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments passed to \link[DBI:dbListTables]{DBI::dbListTables}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \link{character} vector of table names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-get_conn"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-get_conn}{}}}
\subsection{Method \code{get_conn()}}{
Get the connection object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$get_conn()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A DBI connection object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-disconnect"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-disconnect}{}}}
\subsection{Method \code{disconnect()}}{
Disconnect from the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$disconnect()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-read"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-read}{}}}
\subsection{Method \code{read()}}{
Read a table from the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$read(name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{\link{character} Table name}

\item{\code{...}}{Additional arguments passed to \link[DBI:dbReadTable]{DBI::dbReadTable}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \link{data.frame}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-write"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-write}{}}}
\subsection{Method \code{write()}}{
Write a table to the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$write(x, name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{\link{data.frame} Table to write}

\item{\code{name}}{\link{character} Table name}

\item{\code{...}}{Additional arguments passed to \link[DBI:dbWriteTable]{DBI::dbWriteTable}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-remove"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-remove}{}}}
\subsection{Method \code{remove()}}{
Remove a table from the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$remove(name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{\link{character} Table name}

\item{\code{...}}{Additional arguments passed to \link[DBI:dbRemoveTable]{DBI::dbRemoveTable}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Connector_dbi-tbl"></a>}}
\if{latex}{\out{\hypertarget{method-Connector_dbi-tbl}{}}}
\subsection{Method \code{tbl()}}{
Create a \link{tbl} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connector_dbi$tbl(name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{\link{character} Table name}

\item{\code{...}}{Additional arguments passed to \link[dplyr:tbl]{dplyr::tbl}}
}
\if{html}{\out{</div>}}
}
}
}
